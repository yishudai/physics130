
from visual import *
scene.width =800
scene.height = 800

#CONSTANTS
G = 6.7e-11
dt = 10
mEarth = 6e24
mcraft = 15e3
mMoon = 7e22

#OBJECTS AND INITIAL VALUES
Earth = sphere(pos=vector(0,0,0),radius=6.4e6,color=color.white,material=materials.BlueMarble)
craft = sphere(pos=vector(-10*Earth.radius,0,0),radius=1e6,color=color.yellow,make_trail=True)
Moon = sphere(pos=vector(4e8,0,0), radius=1.75e6, color=color.white)
vcraft = vector(0,3.272755e3,0) #initial velocity is straight up along y
pcraft = mcraft*vcraft
t = 0

#CALCULATION LOOP: ALL REPEATED CALCULATIONS GO INSIDE THE LOOP
while t < 60*24*60*60:
    rate(10000)                   ## slow down motion to make animation look nicer
    

    #We're going to put in the effect of gravity here
    
    #distance of craft relative to earth
    rEarth=craft.pos - Earth.pos

    #The magnitude of the relative position vector
    rEarthmag = mag(rEarth)

    #The magnitude of the gravitational force
    FEarth = (G*mcraft*mEarth)/rEarthmag**2

    #the unit vector
    rEarthhat = norm(rEarth)

    #the gravitational force as a vector
    FgEarth = (-G*mcraft*mEarth*rEarthhat)/rEarthmag**2

    #craft.pos = craft.pos + (pcraft/mcraft)*dt
    #t = t+dt

    #pcraft=pcraft+FgEarth*dt


    #distance of craft relative to moon
    rMoon=craft.pos - Moon.pos

    #The magnitude of the relative position vector
    rMoonmag = mag(rMoon)

    #calculating gravitational force moon exerts on spacecraft
    FMoon = (G*mcraft*mcraft)/rMoonmag**2

    #the unit vector
    rMoonhat = norm(rMoon)

    #the gravitational force as a vector
    FgMoon = -(G*mcraft*mMoon*rMoonhat)/rMoonmag**2

    #Fnet
    Fnet=FgMoon+FgEarth

    craft.pos = craft.pos + (pcraft/mcraft)*dt
    t=t+dt

    pcraft=pcraft+Fnet*dt

    

    #if rmag<Earth.radius:
        #break
